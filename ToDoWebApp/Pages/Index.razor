
@page "/"
@inject TaskService TaskService

<h2 class="mb-3">üìù To-Do List</h2>

<div class="mb-3">
    <input class="form-control" placeholder="Judul tugas..." @bind="newTitle" />
    <input type="date" class="form-control mt-2" @bind="newDeadline" />
    <button class="btn btn-primary mt-2" @onclick="AddTask">Tambah Tugas</button>
</div>

<div class="mb-3">
    <strong>Jam sekarang: </strong>@DateTime.Now.ToString("HH:mm:ss")
</div>

@if (TaskService.GetAll().Any())
{
    <ul class="list-group">
        @foreach (var task in TaskService.GetAll())
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <input type="checkbox" checked="@task.IsCompleted" @onchange="() => Toggle(task.Id)" />
                    <strong class="@GetStatusClass(task)">@task.Title</strong>
                    <small class="text-muted ms-2">Deadline: @(task.Deadline?.ToString("dd/MM/yyyy") ?? "None")</small>
                </div>
                <div>
                    <button class="btn btn-sm btn-secondary me-2" @onclick="() => Edit(task)">Edit</button>
                    <button class="btn btn-sm btn-danger" @onclick="() => Delete(task.Id)">Hapus</button>
                </div>
            </li>
        }
    </ul>
}
else
{
    <p class="text-muted">Belum ada tugas.</p>
}

@if (editingTask != null)
{
    <div class="modal show d-block bg-dark bg-opacity-50">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header"><h5>Edit Tugas</h5></div>
                <div class="modal-body">
                    <input class="form-control mb-2" @bind="editingTitle" />
                    <input type="date" class="form-control" @bind="editingDeadline" />
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="() => editingTask = null">Batal</button>
                    <button class="btn btn-success" @onclick="SaveEdit">Simpan</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    string newTitle = "";
    DateTime? newDeadline;

    TaskItem editingTask;
    string editingTitle;
    DateTime? editingDeadline;

    void AddTask()
    {
        if (!string.IsNullOrWhiteSpace(newTitle))
        {
            TaskService.Add(newTitle, newDeadline);
            newTitle = "";
            newDeadline = null;
        }
    }

    void Toggle(Guid id) => TaskService.ToggleComplete(id);

    void Delete(Guid id) => TaskService.Delete(id);

    void Edit(TaskItem task)
    {
        editingTask = task;
        editingTitle = task.Title;
        editingDeadline = task.Deadline;
    }

    void SaveEdit()
    {
        if (editingTask != null)
        {
            TaskService.Update(editingTask.Id, editingTitle, editingDeadline);
            editingTask = null;
        }
    }

    string GetStatusClass(TaskItem task) => task.IsCompleted ? "text-decoration-line-through text-muted" : "";
}
